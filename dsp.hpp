#pragma once

#define PI 3.1415926535897932384626433

// misc
#define SAMPLE_RATE     48000
#define CARRIER_FRQ     18000

// noise measuring
#define NOISE_BODY      16384

// chirp as preamble
#define PREAM_BODY      65536
#define BUBBLE_BODY     256
#define CARRIER_BODY    65536

// symbol
#define SYMBOL_BODY     512

#define LENGTH_BITS     8

#define BPSK 1
#define QPSK 2
#define QAM16 4

#define MODEM BPSK

// fir lpf: kaiser win, fs=48k, fpass=750, fstop=1250, ripple=0.8db, attenuation=26.8db
#define LPF_COEF {0.00248450157232583,0.00272126239724457,0.00292312563396990,0.00308355083689094,0.00319636939093471,0.00325592979788780,0.00325723853893578,0.00319609697908163,0.00306923151947558,0.00287441280670464,0.00261056004092097,0.00227783294394612,0.00187770312186331,0.00141300668474287,0.000887974747456610,0.000308240443700925,-0.000319177925121039,-0.000985919148661196,-0.00168234610464424,-0.00239763851277530,-0.00311990897171199,-0.00383634306490421,-0.00453336024656892,-0.00519679579883814,-0.00581209734082222,-0.00636453879997134,-0.00683944253250957,-0.00722241215407848,-0.00749956863000989,-0.00765778357163072,-0.00768491486087441,-0.00757003063336015,-0.00730362255126238,-0.00687780370935798,-0.00628649070858955,-0.00552555732429028,-0.00459296908229590,-0.00348888593725860,-0.00221573514863849,-0.000778252375312150,0.000816511455923319,0.00255921809002757,0.00443830434232950,0.00644007837399840,0.00854885391891003,0.0107471076771617,0.0130156790837646,0.0153339887037873,0.0176802836358547,0.0200319066643715,0.0223655831068754,0.0246577113866806,0.0268846843391657,0.0290231890976429,0.0310505200177431,0.0329448916018009,0.0346857346594334,0.0362539626657963,0.0376322567462921,0.0388052947819233,0.0397599637508392,0.0404855459928513,0.0409738682210445,0.0412194170057774,0.0412194170057774,0.0409738682210445,0.0404855459928513,0.0397599637508392,0.0388052947819233,0.0376322567462921,0.0362539626657963,0.0346857346594334,0.0329448916018009,0.0310505200177431,0.0290231890976429,0.0268846843391657,0.0246577113866806,0.0223655831068754,0.0200319066643715,0.0176802836358547,0.0153339887037873,0.0130156790837646,0.0107471076771617,0.00854885391891003,0.00644007837399840,0.00443830434232950,0.00255921809002757,0.000816511455923319,-0.000778252375312150,-0.00221573514863849,-0.00348888593725860,-0.00459296908229590,-0.00552555732429028,-0.00628649070858955,-0.00687780370935798,-0.00730362255126238,-0.00757003063336015,-0.00768491486087441,-0.00765778357163072,-0.00749956863000989,-0.00722241215407848,-0.00683944253250957,-0.00636453879997134,-0.00581209734082222,-0.00519679579883814,-0.00453336024656892,-0.00383634306490421,-0.00311990897171199,-0.00239763851277530,-0.00168234610464424,-0.000985919148661196,-0.000319177925121039,0.000308240443700925,0.000887974747456610,0.00141300668474287,0.00187770312186331,0.00227783294394612,0.00261056004092097,0.00287441280670464,0.00306923151947558,0.00319609697908163,0.00325723853893578,0.00325592979788780,0.00319636939093471,0.00308355083689094,0.00292312563396990,0.00272126239724457,0.00248450157232583};
#define LPF_LEN  128

// typedefs
typedef struct {
    union {
        float L;
        float I;
    };
    union {
        float R;
        float Q;
    };
} sample_t;

// declarations
class fir_filter {
public:
    fir_filter();
    ~fir_filter();
    void init(const float* const, int); // initialize coefficients
    void clear(); // clear z
    sample_t filter(const sample_t&);
private:
    void* data;
};

class biquad_filter {
public:
    biquad_filter();
    ~biquad_filter();
    void init(const float*);
    void clear();
    sample_t filter(const sample_t&);
private:
    void* data;
};

float chirp(size_t);
